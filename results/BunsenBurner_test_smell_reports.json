[
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case8",
        "Body": "Could not load the body for function: Case8 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case9",
        "Body": "Could not load the body for function: Case9 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case10",
        "Body": "Could not load the body for function: Case10 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case11",
        "Body": "Could not load the body for function: Case11 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case12",
        "Body": "{\r\n    var exception = await Assert.ThrowsAsync\u003CInvalidOperationException\u003E(async () =\u003E await Arrange(() =\u003E 1).Act(x =\u003E x \u002B 2).Assert(x =\u003E x \u003E 4 \u0026\u0026 x \u003C 6));\r\n    Assert.Equal(\u0022x =\u003E ((x \u003E 4) AndAlso (x \u003C 6)) is not true for the result 3\u0022, exception.Message);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case13",
        "Body": "Could not load the body for function: Case13 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case14",
        "Body": "{\r\n    var exception = await Assert.ThrowsAsync\u003CInvalidOperationException\u003E(async () =\u003E await 1.ArrangeData().Act(x =\u003E x \u002B 2).Assert((r, x) =\u003E r == 2 \u0026\u0026 x \u003E 4 \u0026\u0026 x \u003C 6));\r\n    Assert.Equal(\u0022(r, x) =\u003E (((r == 2) AndAlso (x \u003E 4)) AndAlso (x \u003C 6)) is not true for the result 3 and data 1\u0022, exception.Message);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case15",
        "Body": "Could not load the body for function: Case15 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case16",
        "Body": "Could not load the body for function: Case16 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case17",
        "Body": "Could not load the body for function: Case17 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case18",
        "Body": "{\r\n    int ActFn(int x) =\u003E x \u002B 1;\r\n    void AssertFn(int x) =\u003E Assert.Equal(2, x);\r\n    await 1.ArrangeData().Act(ActFn).Assert(AssertFn).ResetToArranged().Act(ActFn).Assert(AssertFn);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case19",
        "Body": "{\r\n    int ActFn(int x) =\u003E x \u002B 1;\r\n    void AssertFn(int x) =\u003E Assert.Equal(2, x);\r\n    await 1.ArrangeData().Act(ActFn).ResetToArranged().Act(ActFn).Assert(AssertFn);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case20",
        "Body": "{\r\n    void AssertFn(int x) =\u003E Assert.Equal(2, x);\r\n    await 1.ArrangeData().Act(x =\u003E x \u002B 1).Assert(AssertFn).ResetToActed().Assert(AssertFn);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case21",
        "Body": "Could not load the body for function: Case21 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case22",
        "Body": "Could not load the body for function: Case22 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "ActedLinqTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: ActedLinqTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: ActedLinqTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: ActedLinqTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: ActedLinqTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: ActedLinqTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "ArrangeLinqTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: ArrangeLinqTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: ArrangeLinqTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: ArrangeLinqTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: ArrangeLinqTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: ArrangeLinqTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case9",
        "Body": "Could not load the body for function: Case9 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case10",
        "Body": "Could not load the body for function: Case10 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case11",
        "Body": "Could not load the body for function: Case11 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case12",
        "Body": "{\r\n    var exception = await Assert.ThrowsAsync\u003CInvalidOperationException\u003E(async () =\u003E await Given(() =\u003E 1).When(x =\u003E x \u002B 2).Then(x =\u003E x \u003C 4).And(x =\u003E x % 1 != 0));\r\n    Assert.Equal(\u0022x =\u003E ((x % 1) != 0) is not true for the result 3\u0022, exception.Message);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case13",
        "Body": "Could not load the body for function: Case13 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case14",
        "Body": "{\r\n    var exception = await Assert.ThrowsAsync\u003CInvalidOperationException\u003E(async () =\u003E await Given(1).When(x =\u003E x \u002B 2).Then((r, x) =\u003E r == 2 \u0026\u0026 x \u003E 4 \u0026\u0026 x \u003C 6));\r\n    Assert.Equal(\u0022(r, x) =\u003E (((r == 2) AndAlso (x \u003E 4)) AndAlso (x \u003C 6)) is not true for the result 3 and data 1\u0022, exception.Message);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case15",
        "Body": "Could not load the body for function: Case15 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case16",
        "Body": "Could not load the body for function: Case16 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case17",
        "Body": "Could not load the body for function: Case17 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case18",
        "Body": "{\r\n    int WhenFn(int x) =\u003E x \u002B 1;\r\n    void ThenFn(int x) =\u003E Assert.Equal(2, x);\r\n    await 1.GivenData().When(WhenFn).Then(ThenFn).ResetToGiven().When(WhenFn).Then(ThenFn);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case19",
        "Body": "{\r\n    int WhenFn(int x) =\u003E x \u002B 1;\r\n    void ThenFn(int x) =\u003E Assert.Equal(2, x);\r\n    await 1.GivenData().When(WhenFn).ResetToGiven().When(WhenFn).Then(ThenFn);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case20",
        "Body": "{\r\n    void ThenFn(int x) =\u003E Assert.Equal(2, x);\r\n    await 1.GivenData().When(x =\u003E x \u002B 1).Then(ThenFn).ResetToWhen().Then(ThenFn);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case21",
        "Body": "Could not load the body for function: Case21 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case22",
        "Body": "Could not load the body for function: Case22 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestDisposableType",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TestDisposableType",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: TestDisposableType",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "CacheTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: CacheTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: CacheTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestDisposable",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "{\r\n    var disposable = new TestDisposable();\r\n    await disposable.ArrangeData().Act(_ =\u003E _).Assert(r =\u003E !r.IsDisposed);\r\n    Assert.True(disposable.IsDisposed);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case2",
        "Body": "{\r\n    var disposable = new TestDisposable();\r\n    await ManualDisposal.New(disposable).ArrangeData().Act(_ =\u003E _).Assert(r =\u003E !((TestDisposable)r).IsDisposed);\r\n    Assert.False(disposable.IsDisposed);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "ManualDisposalTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "{\r\n    var disposable = new TestDisposable();\r\n    await disposable.ArrangeData().Act(_ =\u003E _).Assert(r =\u003E !r.IsDisposed);\r\n    Assert.True(disposable.IsDisposed);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case2",
        "Body": "{\r\n    var disposable = new TestDisposable();\r\n    await ManualDisposal.New(disposable).ArrangeData().Act(_ =\u003E _).Assert(r =\u003E !((TestDisposable)r).IsDisposed);\r\n    Assert.False(disposable.IsDisposed);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "OnceTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: OnceTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: OnceTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: OnceTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: OnceTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: OnceTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: OnceTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TheoryTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TheoryTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.AutoFixture.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.AutoFixture.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Verify.Xunit.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Verify.Xunit.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case8",
        "Body": "Could not load the body for function: Case8 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case9",
        "Body": "Could not load the body for function: Case9 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case11",
        "Body": "Could not load the body for function: Case11 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case12",
        "Body": "Could not load the body for function: Case12 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case13",
        "Body": "Could not load the body for function: Case13 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case14",
        "Body": "Could not load the body for function: Case14 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case15",
        "Body": "Could not load the body for function: Case15 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case16",
        "Body": "Could not load the body for function: Case16 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case17",
        "Body": "Could not load the body for function: Case17 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case18",
        "Body": "Could not load the body for function: Case18 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case19",
        "Body": "Could not load the body for function: Case19 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case20",
        "Body": "Could not load the body for function: Case20 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestStartupWithAuth",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TestStartupWithAuth",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: TestStartupWithAuth",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestController",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TestController",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: TestController",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AuthServerTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AuthServerTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AuthServerTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case8",
        "Body": "Could not load the body for function: Case8 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case9",
        "Body": "Could not load the body for function: Case9 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case11",
        "Body": "Could not load the body for function: Case11 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case12",
        "Body": "Could not load the body for function: Case12 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case13",
        "Body": "Could not load the body for function: Case13 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case14",
        "Body": "Could not load the body for function: Case14 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case15",
        "Body": "Could not load the body for function: Case15 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case16",
        "Body": "Could not load the body for function: Case16 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "DummyHttpFactoryTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: DummyHttpFactoryTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: DummyHttpFactoryTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: DummyHttpFactoryTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: DummyHttpFactoryTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: DummyHttpFactoryTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "HttpClientExtensionTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: HttpClientExtensionTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestContent",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case8",
        "Body": "Could not load the body for function: Case8 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case9",
        "Body": "Could not load the body for function: Case9 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case10",
        "Body": "Could not load the body for function: Case10 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case11",
        "Body": "Could not load the body for function: Case11 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case12",
        "Body": "Could not load the body for function: Case12 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case13",
        "Body": "Could not load the body for function: Case13 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case14",
        "Body": "Could not load the body for function: Case14 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case15",
        "Body": "Could not load the body for function: Case15 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case16",
        "Body": "Could not load the body for function: Case16 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case17",
        "Body": "Could not load the body for function: Case17 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case18",
        "Body": "Could not load the body for function: Case18 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case19",
        "Body": "Could not load the body for function: Case19 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "Case20",
        "Body": "Could not load the body for function: Case20 in class: TestContent",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "FishModel",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case8",
        "Body": "Could not load the body for function: Case8 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case9",
        "Body": "Could not load the body for function: Case9 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case10",
        "Body": "Could not load the body for function: Case10 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case11",
        "Body": "Could not load the body for function: Case11 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case12",
        "Body": "Could not load the body for function: Case12 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case13",
        "Body": "Could not load the body for function: Case13 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case14",
        "Body": "Could not load the body for function: Case14 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case15",
        "Body": "Could not load the body for function: Case15 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case16",
        "Body": "Could not load the body for function: Case16 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case17",
        "Body": "Could not load the body for function: Case17 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case18",
        "Body": "Could not load the body for function: Case18 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case19",
        "Body": "Could not load the body for function: Case19 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "Case20",
        "Body": "Could not load the body for function: Case20 in class: FishModel",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "HttpMessageMatchersTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case8",
        "Body": "Could not load the body for function: Case8 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case9",
        "Body": "Could not load the body for function: Case9 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case10",
        "Body": "Could not load the body for function: Case10 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case11",
        "Body": "Could not load the body for function: Case11 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case12",
        "Body": "Could not load the body for function: Case12 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case13",
        "Body": "Could not load the body for function: Case13 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case14",
        "Body": "Could not load the body for function: Case14 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case15",
        "Body": "Could not load the body for function: Case15 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case16",
        "Body": "Could not load the body for function: Case16 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case17",
        "Body": "Could not load the body for function: Case17 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case18",
        "Body": "Could not load the body for function: Case18 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case19",
        "Body": "Could not load the body for function: Case19 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "Case20",
        "Body": "Could not load the body for function: Case20 in class: HttpMessageMatchersTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestService",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: TestService",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "MyHealthCheck",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: MyHealthCheck",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: MyHealthCheck",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: MyHealthCheck",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "Startup",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: Startup",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "StartupTest",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: StartupTest",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: StartupTest",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: StartupTest",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestServerBuilderOptionsTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Http.Tests(net6.0)",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TestServerBuilderOptionsTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "Person",
    "Message": null,
    "ProjectName": "BunsenBurner.Bogus.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: Person",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: Person",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: Person",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: Person",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: Person",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: Person",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: Person",
        "Smells": []
      },
      {
        "Name": "Case8",
        "Body": "Could not load the body for function: Case8 in class: Person",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Bogus.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case8",
        "Body": "Could not load the body for function: Case8 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Bogus.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case8",
        "Body": "Could not load the body for function: Case8 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "SomeService",
    "Message": null,
    "ProjectName": "BunsenBurner.FunctionApp.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: SomeService",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: SomeService",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: SomeService",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: SomeService",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: SomeService",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: SomeService",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "Startup",
    "Message": null,
    "ProjectName": "BunsenBurner.FunctionApp.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: Startup",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestService",
    "Message": null,
    "ProjectName": "BunsenBurner.FunctionApp.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: TestService",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "Function",
    "Message": null,
    "ProjectName": "BunsenBurner.FunctionApp.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: Function",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: Function",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: Function",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: Function",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: Function",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: Function",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.FunctionApp.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.FunctionApp.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "DummyLoggerTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Logging.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: DummyLoggerTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: DummyLoggerTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: DummyLoggerTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: DummyLoggerTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "SinkTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Logging.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: SinkTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestService",
    "Message": null,
    "ProjectName": "BunsenBurner.Background.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: TestService",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: TestService",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "Background",
    "Message": null,
    "ProjectName": "BunsenBurner.Background.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: Background",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: Background",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: Background",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: Background",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: Background",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: Background",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: Background",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "Startup",
    "Message": null,
    "ProjectName": "BunsenBurner.Background.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: Startup",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: Startup",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Background.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case7",
        "Body": "Could not load the body for function: Case7 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Background.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case5",
        "Body": "Could not load the body for function: Case5 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Hedgehog.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case6",
        "Body": "Could not load the body for function: Case6 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Hedgehog.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "LoggerTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Xunit.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "{\r\n    var store = LogMessageStore.New();\r\n    var services = new ServiceCollection();\r\n    services.ClearLoggingProviders().AddDummyLogger(store, _outputHelper);\r\n    var sp = services.BuildServiceProvider();\r\n    var logger1 = sp.GetRequiredService\u003CILogger\u003Cint\u003E\u003E();\r\n    var logger2 = sp.GetRequiredService\u003CILogger\u003Cstring\u003E\u003E();\r\n    logger1.LogInformation(\u0022logger 1\u0022);\r\n    logger2.LogInformation(\u0022logger 2\u0022);\r\n    Assert.Equal(2, store.Count());\r\n    Assert.Contains(store, message =\u003E message.Message == \u0022logger 1\u0022);\r\n    Assert.Contains(store, message =\u003E message.Message == \u0022logger 2\u0022);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case2",
        "Body": "{\r\n    var store = LogMessageStore.New();\r\n    var services = new ServiceCollection();\r\n    services.ClearLoggingProviders().AddDummyLogger(store, _outputHelper, message =\u003E $\u0022[{message.Level}]: {message.Message}\u0022);\r\n    var sp = services.BuildServiceProvider();\r\n    var logger1 = sp.GetRequiredService\u003CILogger\u003Cint\u003E\u003E();\r\n    var logger2 = sp.GetRequiredService\u003CILogger\u003Cstring\u003E\u003E();\r\n    logger1.LogInformation(\u0022logger 1\u0022);\r\n    logger2.LogInformation(\u0022logger 2\u0022);\r\n    Assert.Equal(2, store.Count());\r\n    Assert.Contains(store, message =\u003E message.Message == \u0022logger 1\u0022);\r\n    Assert.Contains(store, message =\u003E message.Message == \u0022logger 2\u0022);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case3",
        "Body": "{\r\n    var sink = _outputHelper.AsSink();\r\n    var logger = DummyLogger.New\u003Cobject\u003E(sink: sink);\r\n    logger.LogInformation(\u0022Some test message\u0022);\r\n    Assert.Contains(logger, message =\u003E message.Message == \u0022Some test message\u0022);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TheoryTests",
    "Message": null,
    "ProjectName": "BunsenBurner.Xunit.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TheoryTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: TheoryTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: TheoryTests",
        "Smells": []
      },
      {
        "Name": "Case4",
        "Body": "Could not load the body for function: Case4 in class: TheoryTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.BenchmarkDotNet.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.BenchmarkDotNet.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "TestLoggerTests",
    "Message": null,
    "ProjectName": "BunsenBurner.BenchmarkDotNet.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: TestLoggerTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "AaaTests",
    "Message": null,
    "ProjectName": "BunsenBurner.DependencyInjection.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "{\r\n    var exception = await Assert.ThrowsAsync\u003CAggregateException\u003E(async () =\u003E await new ServiceCollection().ArrangeData().ActAndAssertServicesAreConfigured(x =\u003E\r\n    {\r\n        var startup = new Startup(s =\u003E s.AddScoped\u003CIA, A\u003E());\r\n        startup.Configure(x);\r\n        return x;\r\n    }, descriptor =\u003E descriptor.ServiceType == typeof(IA)));\r\n    Assert.Contains(exception.InnerExceptions, e =\u003E e.Message.Contains(\u0022Unable to resolve service for type \u0027BunsenBurner.DependencyInjection.Tests.IB\u0027 while attempting to activate \u0027BunsenBurner.DependencyInjection.Tests.A\u0027.\u0022));\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Case3",
        "Body": "Could not load the body for function: Case3 in class: AaaTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "BddTests",
    "Message": null,
    "ProjectName": "BunsenBurner.DependencyInjection.Tests",
    "Methods": [
      {
        "Name": "Case1",
        "Body": "Could not load the body for function: Case1 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "Case2",
        "Body": "Could not load the body for function: Case2 in class: BddTests",
        "Smells": []
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  }
]