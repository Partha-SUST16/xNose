[
  {
    "Name": "ConcreteE2ETestFixtureForWinForms",
    "Message": null,
    "ProjectName": "boilersE2E.xUnit.Test(net7.0-windows10.0.22000.0)",
    "Methods": [
      {
        "Name": "Calc_123Plus456",
        "Body": "{\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022plus\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u0022579\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Calc_123Minus456",
        "Body": "{\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022minus\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u0022-333\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Calc_369Multiple3",
        "Body": "{\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022multiple\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u00221107\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Calc_369Divide3",
        "Body": "{\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022divide\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u0022123\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Calc_33_3Divide3",
        "Body": "{\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022dot\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022divide\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u002211.1\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "C",
        "Body": "{\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022Clear\u0022).Click();\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022seven\u0022).Click();\r\n    GetElementByAutomationID(\u0022eight\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022zero\u0022).Click();\r\n    Assert.Equal(\u00221234567890\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022Clear\u0022).Click();\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "CE",
        "Body": "{\r\n    Assert.Equal(string.Empty, GetElementByAutomationID(\u0022fomula\u0022).Text);\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022ClearEntry\u0022).Click();\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022seven\u0022).Click();\r\n    GetElementByAutomationID(\u0022eight\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022zero\u0022).Click();\r\n    GetElementByAutomationID(\u0022plus\u0022).Click();\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022seven\u0022).Click();\r\n    GetElementByAutomationID(\u0022eight\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022zero\u0022).Click();\r\n    Assert.Equal(\u00221234567890\u002B1234567890\u0022, GetElementByAutomationID(\u0022fomula\u0022).Text);\r\n    Assert.Equal(\u00221234567890\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022ClearEntry\u0022).Click();\r\n    Assert.Equal(string.Empty, GetElementByAutomationID(\u0022fomula\u0022).Text);\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  },
  {
    "Name": "ConcreteE2ETestFixtureForWPF",
    "Message": null,
    "ProjectName": "boilersE2E.xUnit.Test(net7.0-windows10.0.22000.0)",
    "Methods": [
      {
        "Name": "Calc_123Plus456",
        "Body": "{\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022plus\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u0022579\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Calc_123Minus456",
        "Body": "{\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022minus\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u0022-333\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Calc_369Multiple3",
        "Body": "{\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022multiple\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u00221107\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Calc_369Divide3",
        "Body": "{\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022divide\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u0022123\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "Calc_33_3Divide3",
        "Body": "{\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022dot\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022divide\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022equal\u0022).Click();\r\n    Assert.Equal(\u002211.1\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "C",
        "Body": "{\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022Clear\u0022).Click();\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022seven\u0022).Click();\r\n    GetElementByAutomationID(\u0022eight\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022zero\u0022).Click();\r\n    Assert.Equal(\u00221234567890\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022Clear\u0022).Click();\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "CE",
        "Body": "{\r\n    Assert.Equal(string.Empty, GetElementByAutomationID(\u0022fomula\u0022).Text);\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022ClearEntry\u0022).Click();\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022seven\u0022).Click();\r\n    GetElementByAutomationID(\u0022eight\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022zero\u0022).Click();\r\n    GetElementByAutomationID(\u0022plus\u0022).Click();\r\n    GetElementByAutomationID(\u0022one\u0022).Click();\r\n    GetElementByAutomationID(\u0022two\u0022).Click();\r\n    GetElementByAutomationID(\u0022three\u0022).Click();\r\n    GetElementByAutomationID(\u0022four\u0022).Click();\r\n    GetElementByAutomationID(\u0022five\u0022).Click();\r\n    GetElementByAutomationID(\u0022six\u0022).Click();\r\n    GetElementByAutomationID(\u0022seven\u0022).Click();\r\n    GetElementByAutomationID(\u0022eight\u0022).Click();\r\n    GetElementByAutomationID(\u0022nine\u0022).Click();\r\n    GetElementByAutomationID(\u0022zero\u0022).Click();\r\n    Assert.Equal(\u00221234567890\u002B1234567890\u0022, GetElementByAutomationID(\u0022fomula\u0022).Text);\r\n    Assert.Equal(\u00221234567890\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n    GetElementByAutomationID(\u0022ClearEntry\u0022).Click();\r\n    Assert.Equal(string.Empty, GetElementByAutomationID(\u0022fomula\u0022).Text);\r\n    Assert.Equal(\u00220\u0022, GetElementByAutomationID(\u0022display\u0022).Text);\r\n}",
        "Smells": [
          {
            "Name": "EmptyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConditionalTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ExpectedExceptionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "AssertionRouletteTestSmell",
            "Status": "Found"
          },
          {
            "Name": "UnknownTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantPrintTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SleepyTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "IgnoreTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "RedundantAssertionTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "DuplicateAssertionTestSmell",
            "Status": "Found"
          },
          {
            "Name": "MagicNumberTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "EagerTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "InappropriateAssertionsTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "SensitiveEqualitySmell",
            "Status": "Not Found"
          },
          {
            "Name": "ConstructorInitializationTestSmell",
            "Status": "Not Found"
          },
          {
            "Name": "ObscureInLineSetUpSmell",
            "Status": "Not Found"
          }
        ]
      },
      {
        "Name": "LackOfCohesion",
        "Body": null,
        "Smells": [
          {
            "Name": "LackOfCohesion",
            "Status": "Not Found"
          }
        ]
      }
    ]
  }
]